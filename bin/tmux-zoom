#!/bin/bash

set -euo pipefail

##
# Offer "zoom" support in tmux; I want to see other things, so this zooms, but
# does not remove/replace/hide other panes.
# Since its execution has big impact on UX, to keep it low latency it does
# almost everything within bash directly, instead of forking off needless
# processes. (I should test this theory -- maybe the pipe subshells already kill
# it and using sed && bc would have been simpler!)
#
# it supports 4 commands: state toggle zoom unzoom
# - state:  is zoom in effect in current window? prints "zoomed" or "unzoomed"
# - unzoom: if state == "zoomed" then unzoom()
# - zoom:   unzoom(); zoom() -- thus will also re-zoom if already zoomed
# - toggle: zoom if unzoomed; unzoom if zoomed
#

usage_exit() {
    echo "usage: tmux-zoomer <state|in|out|toggle>" >&2
    exit 1
}

[[ -z "${1:-}" ]] && usage_exit

# read the active pane and window data
window_name=$(tmux list-panes -f '#{pane_active}' -F '#{window_name}')
_pane_data=$(tmux list-panes -f '#{pane_active}' -F '#{session_id} #{window_id} #{pane_id} #{pane_width} #{pane_height} #{window_width} #{window_height}')
read -r session_id window_id pane_id pane_width pane_height window_width window_height <<< "$_pane_data"

is_zoomed() {
    [[ "$window_name" == "zoomed "* ]]
    return $?
}

unzoom() {
    # unzoom when appropriate, extracting from window name
    is_zoomed || return 0

    # decode dimensions from window name
    _unzoom_data=${window_name:7}
    read -r unzoom_pane_id unzoom_pane_width unzoom_pane_height _ <<< "$_unzoom_data"
    unzoom_window_name=$(sed 's/.* | //' <<< "$_unzoom_data")

    # ignore failure of resize/rename -- so far it's only when pane/window stale
    tmux resize-pane -t "$unzoom_pane_id" -x $unzoom_pane_width -y $unzoom_pane_height || true
    tmux rename-window -t "$window_id" "$unzoom_window_name" || true

    # reset name, since it impacts later call to zoom
    window_name=$unzoom_window_name
}

zoom() {
    # first unzoom if already zoomed
    is_zoomed && unzoom

    # in each dimension (to 80%) IFF already less than 80%
    zoom_width=$(( ($window_width * 4) / 5 ))
    zoom_height=$(( ($window_height * 4) / 5 ))

    resize_pane_args=""
    [[ $pane_width -lt $zoom_width ]] &&
        resize_pane_args="$resize_pane_args -x 80%"
    [[ $pane_height -lt $zoom_height ]] &&
        resize_pane_args="$resize_pane_args -y 80%"

    if [[ -n "${resize_pane_args:-}" ]]; then
        tmux rename-window -t "$window_id" "zoomed $pane_id $pane_width $pane_height | $window_name"
        tmux resize-pane -t "$pane_id" $resize_pane_args
    fi
}

case "$1" in
    state)  if is_zoomed; then echo "zoomed"; else echo "unzoomed"; fi ;;
    "in"|zoom)   zoom ;;
    out|unzoom) unzoom ;;
    toggle) if is_zoomed; then unzoom; else zoom; fi ;;
    *)      usage_exit ;;
esac
exit 0


set-option -sg mode-keys vi
set-option -sg history-limit 1000000
set-option -sg escape-time 0
set-option -g repeat-time 800

# truecolor mmm
set -g default-terminal "screen-256color"
set-option -ga terminal-overrides ",*256*:Tc"

# clear everything so that prefix-? is meaningful
unbind -a

# Use c-z instead of c-b as the prefix
unbind C-b
set-option -sg prefix C-z
bind z send-prefix

bind : command-prompt
bind ? list-keys
bind d detach-client


## Creation ##
set -sg renumber-windows on
bind C-c new-window -c "#{pane_current_path}"
bind C-s split-window -v -c "#{pane_current_path}"
bind C-v split-window -h -c "#{pane_current_path}"


## Modification -- resize, swap, etc. ##
bind m select-pane -m
bind S swap-window
bind -r r rotate-window -U
bind -r L next-layout

bind -r . resize-pane -R 10
bind -r , resize-pane -L 10
bind -r - resize-pane -U 4
bind -r = resize-pane -D 4

## Move and Zoom
bind C run "tzoom clear"
bind C-f run "tzoom toggle"
bind C-h select-pane -L \; run "tzoom in"
bind C-j select-pane -D \; run "tzoom in"
bind C-k select-pane -U \; run "tzoom in"
bind C-l select-pane -R \; run "tzoom in"

## Break and Join
bind B break-pane
bind J join-pane

# magic sizes, shift-8 = 80, shift-1 = 120
bind * resize-pane -x 80
bind ! resize-pane -x 120

## Selection ##
bind C-z last-window
bind Space next-window
bind C-Space next-window
bind n next-window
bind C-n next-window
bind p previous-window
bind C-p previous-window

bind 0 select-window -t :=0
bind 1 select-window -t :=1
bind 2 select-window -t :=2
bind 3 select-window -t :=3
bind 4 select-window -t :=4
bind 5 select-window -t :=5
bind 6 select-window -t :=6
bind 7 select-window -t :=7
bind 8 select-window -t :=8
bind 9 select-window -t :=9

bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# bind C-j select-window -t :=0
# bind C-k select-window -t :=1
# bind C-l select-window -t :=2
# bind C-\; select-window -t :=3

# copy paste write
bind b copy-mode
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
bind -T copy-mode-vi > send-keys -X copy-selection-and-cancel \; save-buffer ~/tmp/tmux.log
# bind -T copy-mode-vi > send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace dd of=~/tmp/tmux.log"
bind ] paste-buffer
bind > capture-pane -S -1000000 \; save-buffer ~/tmp/tmux.log \; new-window 'nvim ~/tmp/tmux.log'

# reload conf on R
bind R source-file ~/.tmux.conf \; \
    display-message "source-file ~/.tmux.conf done"


# /Users/ben/src/dotfiles/.tmux.conf:101: invalid style: bg=grey,fg=blue

set -g message-command-style "bg=green,fg=black"
#set -g status-style "bg=gray,fg=blue"
set -g status-style "fg=yellow,bg=black"
set -g status-interval 2
set -g status-justify centre
set -g status-position top
# set -g status-left "#[bg=yellow,fg=black] %H:%M:%S [#S] #[bg=default,fg=default]"
set -g status-left "#[bg=yellow,fg=black]%H:%M #S #[bg=default,fg=default]"
set -g status-left-length  16
set -g status-right-length 80
set -g status-right "#(tmux-mem-cpu-load --colors)#[default]"

# local options
if-shell "[[ -r $HOME/.tmux-local.conf ]]" \
    "source-file ~/.tmux-local.conf"

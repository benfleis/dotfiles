set-option -sg mode-keys vi
set-option -sg history-limit 100000
set-option -sg escape-time 0
set-option -g default-terminal "screen-256color"

# clear everything so that prefix-? is meaningful
unbind -a

# Use c-z instead of c-b as the prefix
unbind C-b
set-option -sg prefix C-z
bind z send-prefix

bind : command-prompt
bind ? list-keys
bind d detach-client

bind C-z last-window

bind Space next-window
bind C-Space next-window
bind n next-window
bind C-n next-window

bind p previous-window
bind C-p previous-window

# standard: 0-9
bind 0 select-window -t :=0
bind 1 select-window -t :=1
bind 2 select-window -t :=2
bind 3 select-window -t :=3
bind 4 select-window -t :=4
bind 5 select-window -t :=5
bind 6 select-window -t :=6
bind 7 select-window -t :=7
bind 8 select-window -t :=8
bind 9 select-window -t :=9

# experiment: C-x + [j k l ;] -> windows 0 1 2 3
bind -T jumps j  select-window -t :=0
bind -T jumps k  select-window -t :=1
bind -T jumps l  select-window -t :=2
bind -T jumps \; select-window -t :=3
bind C-x switch-client -T jumps

# other half: C-[j k l ;] -> windows 0 1 2 3
unbind C-j
unbind C-k
unbind C-l
bind C-j select-window -t :=0
bind C-k select-window -t :=1
bind C-l select-window -t :=2
bind C-\; select-window -t :=3

# vim pane switching / splitting
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
# bind C-h select-pane -L
# bind C-j select-pane -D
# bind C-k select-pane -U
# bind C-l select-pane -R

set -sg renumber-windows on
bind C-c new-window -c "#{pane_current_path}"
# bind C-h new-window -c "$HOME"
bind C-s split-window -v -c "#{pane_current_path}"
bind C-v split-window -h -c "#{pane_current_path}"

# bind S to swap this window w/ marked
bind S swap-window

bind -r < resize-pane -L 10
bind -r > resize-pane -R 10
bind -r + resize-pane -U 4
bind -r - resize-pane -D 4

bind b copy-mode
bind ] paste-buffer

# reload on R
bind R source-file ~/.tmux.conf

set -g message-command-style "bg=green,fg=black"
set -g status-style "bg=black,fg=red"
set -g status-interval 2
set -g status-justify centre
set -g status-position top
set -g status-left "#[bg=yellow,fg=black] %H:%M:%S #{client_key_table} // #[bg=default,fg=default]"
set -g status-right-length 80
set -g status-right "#{=10:client_key_table}: #(tmux-mem-cpu-load --colors)#[default]"

# 

# local options
if-shell "[[ -r $HOME/.tmux-local.conf ]]" \
    "source-file ~/.tmux-local.conf"
